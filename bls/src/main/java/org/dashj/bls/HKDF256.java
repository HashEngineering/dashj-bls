/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.dashj.bls;

public class HKDF256 {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HKDF256(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HKDF256 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(HKDF256 obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        DASHJBLSJNI.delete_HKDF256(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static void extract(byte[] prk_output, byte[] salt, long saltLen, byte[] ikm, long ikm_len) {
    DASHJBLSJNI.HKDF256_extract(prk_output, salt, saltLen, ikm, ikm_len);
  }

  public static void expand(byte[] okm, long L, byte[] prk, byte[] info, long infoLen) {
    DASHJBLSJNI.HKDF256_expand(okm, L, prk, info, infoLen);
  }

  public static void extractExpand(byte[] output, long outputLen, byte[] key, long keyLen, byte[] salt, long saltLen, byte[] info, long infoLen) {
    DASHJBLSJNI.HKDF256_extractExpand(output, outputLen, key, keyLen, salt, saltLen, info, infoLen);
  }

  public HKDF256() {
    this(DASHJBLSJNI.new_HKDF256(), true);
  }

  public final static short HASH_LEN = DASHJBLSJNI.HKDF256_HASH_LEN_get();
}
